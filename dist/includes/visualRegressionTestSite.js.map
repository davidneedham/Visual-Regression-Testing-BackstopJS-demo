{"version":3,"sources":["../../includes/visualRegressionTestSite.js"],"names":["siteToTest","siteExists","Object","prototype","hasOwnProperty","call","sitesToUpdate","rootDir","path","dirname","require","main","filename","endsWith","substring","indexOf","name","site","console","log","label","currentConfig","BackstopReferenceBaseUrl","BackstopTestUrl","pathsToTest","config","then","catch"],"mappings":";;;;;;kBAUgB,UAAUA,UAAV,EAAsB;AAClC,QAAMC,aAAaC,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCC,uBAArC,EAAoDN,UAApD,CAAnB;AACA,QAAIO,UAAUC,eAAKC,OAAL,CAAaC,QAAQC,IAAR,CAAaC,QAA1B,CAAd;AACA,QAAIL,QAAQM,QAAR,CAAiB,MAAjB,CAAJ,EAA8B;AAC1BN,kBAAUA,QAAQO,SAAR,CAAkB,CAAlB,EAAqBP,QAAQQ,OAAR,CAAgB,OAAhB,CAArB,CAAV;AACH;;AAED,QAAI,CAACd,UAAL,EAAiB;AACb,kCAAcD,UAAd;AACH;;AAEDM,4BAAcN,UAAd,EAA0BgB,IAA1B,GAAiChB,UAAjC;AACA,QAAMiB,OAAOX,wBAAcN,UAAd,CAAb;;AAEAkB,YAAQC,GAAR,eAAwBF,KAAKG,KAA7B;;AAEAF,YAAQC,GAAR,mCAA4CF,KAAKG,KAAjD;AACA,QAAMC,gBAAgB,8BAAeJ,KAAKK,wBAApB,EAA8CL,KAAKM,eAAnD,EAAoEN,KAAKO,WAAzE,EAAsFP,KAAKD,IAA3F,CAAtB;;AAEAE,YAAQC,GAAR,iCAA0CF,KAAKG,KAA/C;AACA,8BAAS,WAAT,EAAsB;AAClBK,gBAAQJ;AADU,KAAtB,EAEGK,IAFH,CAEQ,YAAM;AACVR,gBAAQC,GAAR,yCAAkDF,KAAKG,KAAvD;AACA,kCAAS,MAAT,EAAiB;AACbK,oBAAQJ;AADK,SAAjB,EAEGK,IAFH,CAEQ,YAAM;;AAEVR,oBAAQC,GAAR,uBAAgCZ,OAAhC,uBAAyDU,KAAKD,IAA9D;AACA;AACA,wEAA2CC,KAAKG,KAAhD;AAEH,SARD,EAQGO,KARH,CAQS,YAAM;;AAEXT,oBAAQC,GAAR,uBAAgCZ,OAAhC,uBAAyDU,KAAKD,IAA9D;AACA;AACA,wEAA2CC,KAAKG,KAAhD;AAEH,SAdD;AAeH,KAnBD,EAmBGO,KAnBH,CAmBS,YAAM;AACX,wEAA+CV,KAAKG,KAApD;AACH,KArBD;AAsBH,C;;AAnDD;;;;AACA;;;;AACA;;;;AAGA;;;;AACA;;;;AACA","file":"visualRegressionTestSite.js","sourcesContent":["// Local dependencies\nimport throwError from './throwError';\nimport backstopConfig from './backstopConfig';\nimport sitesToUpdate from './sitesToUpdate';\n\n// External dependencies\nimport path from 'path';\nimport backstop from 'backstopjs';\nimport opn from 'opn';\n\nexport default  function (siteToTest) {\n    const siteExists = Object.prototype.hasOwnProperty.call(sitesToUpdate, siteToTest)\n    let rootDir = path.dirname(require.main.filename)\n    if (rootDir.endsWith('dist')) {\n        rootDir = rootDir.substring(0, rootDir.indexOf('/dist'))\n    }\n\n    if (!siteExists) {\n        throwError(`${siteToTest} is not a valid site. Check the name you entered and the \"includes/sitesToUpdate.js\" config file`)\n    }\n\n    sitesToUpdate[siteToTest].name = siteToTest\n    const site = sitesToUpdate[siteToTest]\n\n    console.log(`Testing: ${site.label}`)\n\n    console.log(`Generating configuration for ${site.label}`)\n    const currentConfig = backstopConfig(site.BackstopReferenceBaseUrl, site.BackstopTestUrl, site.pathsToTest, site.name)\n\n    console.log(`Running Backstop tests for ${site.label}`)\n    backstop('reference', {\n        config: currentConfig\n    }).then(() => {\n        console.log(`Backstop JS reference complete for ${site.label}! Starting tests.`)\n        backstop('test', {\n            config: currentConfig\n        }).then(() => {\n\n            console.log(`Report saved to \"${rootDir}/backstop_data/${site.name}/html_report/index.html\"`)\n            // opn(`${rootDir}/backstop_data/${site.name}/html_report/index.html`)\n            throwError(`Backstop JS tests passed for ${site.label}!`)\n\n        }).catch(() => {\n\n            console.log(`Report saved to \"${rootDir}/backstop_data/${site.name}/html_report/index.html\"`)\n            // opn(`${rootDir}/backstop_data/${site.name}/html_report/index.html`)\n            throwError(`Backstop JS tests failed for ${site.label}!`)\n\n        });\n    }).catch(() => {\n        throwError(`Backstop JS reference failed for ${site.label}! Please check the BackstopReferenceBaseUrl`)\n    });\n}\n"]}